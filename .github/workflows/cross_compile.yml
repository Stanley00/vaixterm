name: Build and Package VaixTerm

on:
  push:
    branches: ["main"]
    tags:
      - 'v*' # Push events matching v1.0, v20.15.10, etc.
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    # Allow manual triggering of the workflow

env:
  SDK_URL: https://github.com/rg35xx-cfw/rg35xx-cfw.github.io/releases/download/rg35xx_plus_h_sdk_20240207/arm-buildroot-linux-gnueabihf_sdk-buildroot.tar.gz
  SDK_DIR: ${{ github.workspace }}/rg35xx-toolchain
  BUILDROOT_HOST_DIR: ${{ github.workspace }}/rg35xx-toolchain/usr
  VERSION: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || 'dev' }}
  ARTIFACT_PREFIX: vaixterm-rg35xxh-${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || 'dev' }}

jobs:
  build:
    name: Build for RG35XXH
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up environment
      run: |
        # Create toolchain directory
        mkdir -p ${SDK_DIR}
        
        # Download and extract the SDK
        echo "Downloading SDK..."
        wget ${SDK_URL} -O sdk.tar.gz
        tar -xzf sdk.tar.gz -C ${SDK_DIR} --strip-components=1
        
        # Fix permissions
        chmod -R u+w ${SDK_DIR}
        
        # Run the SDK's relink script if it exists
        if [ -f "${SDK_DIR}/relocate-sdk.sh" ]; then
          echo "Relocating SDK..."
          ${SDK_DIR}/relocate-sdk.sh
        fi
        
        # Verify the toolchain is accessible
        if [ ! -f "${BUILDROOT_HOST_DIR}/bin/arm-buildroot-linux-gnueabihf-gcc" ]; then
          echo "Error: Toolchain not found"
          ls -la ${BUILDROOT_HOST_DIR}/bin/
          exit 1
        fi
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config libsdl2-dev libsdl2-ttf-dev libsdl2-image-dev zip
    
    - name: Build VaixTerm
      run: |
        # Set environment variables for cross-compilation
        export PATH="${BUILDROOT_HOST_DIR}/bin:${PATH}"
        export BUILDROOT_HOST_DIR="${BUILDROOT_HOST_DIR}"
        
        # Build the project
        make clean
        make all
        
        # Verify the binary
        file vaixterm
        
        # Create release directory
        mkdir -p release
        cp vaixterm release/
        cp -r res/ release/
        
        # Create a tar.gz of the release
        tar -czvf ${GITHUB_WORKSPACE}/vaixterm-rg35xxh.tar.gz -C release .
    
    - name: Create Packages
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
      run: |
        # Create a clean working directory
        mkdir -p packages
        
        # --- PortMaster Package ---
        echo "Creating PortMaster package..."
        mkdir -p packages/portmaster/vaixterm
        
        # Copy the binary and resources
        cp vaixterm packages/portmaster/vaixterm/
        cp -r res/ packages/portmaster/vaixterm/
        
        # Copy PortMaster specific files
        cp packages/PortMaster/VaixTerm.sh packages/portmaster/vaixterm/
        cp packages/PortMaster/vaixterm.gptk packages/portmaster/vaixterm/
        
        # Create port.json using the script
        VERSION=${GITHUB_REF#refs/tags/v}
        if [ "$VERSION" = "$GITHUB_REF" ]; then
          VERSION="dev"
        fi
        
        cd packages/portmaster/vaixterm
        ../../../scripts/generate_port_json.sh "${VERSION}"
        
        # Create a zip file for PortMaster
        cd ..
        zip -r ${GITHUB_WORKSPACE}/vaixterm-rg35xxh-portmaster.zip .
        
        # --- MUOS Package ---
        echo "Creating MUOS package..."
        mkdir -p packages/muos/VaixTerm/Terminal
        
        # Copy the binary and resources
        cp  vaixterm packages/muos/VaixTerm/Terminal/terminal
        cp -r res packages/muos/VaixTerm/Terminal/
        
        # Copy MUOS specific files
        cp packages/MUOS/Terminal/mux_launch.sh packages/muos/VaixTerm/Terminal/
        
        # Create the .muxapp package
        cd packages/muos/VaixTerm
        zip -r ${GITHUB_WORKSPACE}/vaixterm-rg35xxh-muos.muxapp .
        
        # List files for debugging
        ls -la ${GITHUB_WORKSPACE}/*.tar.gz ${GITHUB_WORKSPACE}/*.zip ${GITHUB_WORKSPACE}/*.muxapp
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vaixterm-artifacts-${VERSION}
        path: |
          ${GITHUB_WORKSPACE}/vaixterm-rg35xxh.tar.gz
          ${GITHUB_WORKSPACE}/vaixterm-rg35xxh-portmaster.zip
          ${GITHUB_WORKSPACE}/vaixterm-rg35xxh-muos.muxapp
        retention-days: 1
        if-no-files-found: error
    
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        generate_release_notes: true
        files: |
          ${GITHUB_WORKSPACE}/vaixterm-rg35xxh.tar.gz
          ${GITHUB_WORKSPACE}/vaixterm-rg35xxh-portmaster.zip
          ${GITHUB_WORKSPACE}/vaixterm-rg35xxh-muos.muxapp
        body: |
          # VaixTerm ${VERSION}
          
          ## Downloads
          - **Raw Binary**: [vaixterm-rg35xxh.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/vaixterm-rg35xxh.tar.gz)
          - **PortMaster Package**: [vaixterm-rg35xxh-portmaster.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/vaixterm-rg35xxh-portmaster.zip)
          - **MUOS Package**: [vaixterm-rg35xxh-muos.muxapp](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/vaixterm-rg35xxh-muos.muxapp)
          
          ## Installation Instructions
          
          ### Manual Installation
          1. Extract the `vaixterm-rg35xxh.tar.gz` to your SD card
          2. Make the binary executable: `chmod +x vaixterm`
          3. Run: `./vaixterm`
          
          ### PortMaster Installation
          1. Copy the `vaixterm-rg35xxh-portmaster.zip` to the `ports` directory on your SD card (typically in the `roms/ports` or `roms2/ports` directory)
          2. Extract the zip file
          3. The terminal will be available in the Ports section of your device
          
          ### MUOS Installation
          1. Copy the `vaixterm-rg35xxh-muos.muxapp` file to the `ARCHIVE` on the root of your SD card
          2. On your device, go to: `Apps` > `Archive`
          3. Select the `vaixterm-rg35xxh-muos.muxapp` file to install it
          4. The terminal will be available in the `Apps` section of your MUOS launcher
          
          ## Notes
          - For PortMaster, I have not tested it on all devices.
          - For MUOS, ensure you have the latest version of the firmware installed
          - Check the [GitHub repository](https://github.com/${{ github.repository }}) for additional documentation and support
          
          Built from ${{ github.sha }}
